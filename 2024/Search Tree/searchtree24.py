# -*- coding: utf-8 -*-
"""SearchTree24.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RF6oQm4Z8M55xO87hKmbnxZykqYKZxCG
"""

class CurrentBoard:
  board =""
  def __init__(self,string_def = " "*9) :
      self.board = string_def

  def display(self):
    print(self.board[0] + "|" +self.board[1] + "|" +self.board[2])
    print("-----")
    print(self.board[3] + "|" +self.board[4] + "|" +self.board[5])
    print("-----")
    print(self.board[6] + "|" +self.board[7] + "|" +self.board[8])

  def other(self,piece):
    if piece == "X":
      return "O"
    return "X"

  def Eq3(self,i1,i2,i3):
    return (self.board[i1] == self.board[i2]) and (self.board[i2] == self.board[i3])


  def state_of_board(self):
    if self.Eq3(0,1,2) or self.Eq3(0,3,6) or self.Eq3(0,4,8):
      return self.board[0]
    if self.Eq3(3,4,5) or self.Eq3(1,4,7) or self.Eq3(2,4,6):
      return self.board[4]
    if self.Eq3(6,7,8) or self.Eq3(2,5,8):
      return self.board[8]

    if " " in self.board:
      return "U"
    return "D"

  def all_possible_moves(self, player_piece):
    possible_moves = []
    for index in range(len(self.board)):
      if self.board[index] == " ":
        possible_moves.append( CurrentBoard(self.board[:index] + player_piece + self.board[index+1:]))

    return possible_moves

class SearchTreeNode:

  def __init__(self,board_instance,playing_as):
    self.children = []
    self.current_board = board_instance
    self.move_for = playing_as
    self.generate_children()

  def generate_children(self):
    for board_for_next_move in self.current_board.all_possible_moves(self.move_for):
      self.children.append(SearchTreeNode(board_for_next_move,self.current_board.other(self.move_for)))

"3" in "123"

cb = CurrentBoard()

cb.display()

cb.state_of_board()

st.children[3].children[2].children[5].current_board.display()

for child in st.children:
  child.current_board.display()
  x = input()

cb.display()

ss = "012345678"

ss[:3]

ss[4:]

ss[:3] + "X" + ss[4:]

